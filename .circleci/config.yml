version: 2.1
orbs:
  hugo: circleci/hugo@1.3.1
jobs:
  build:
    docker:
      - image: cimg/base:current
    working_directory: ~/repo
    environment:
      BRANCH: master
      TARGET_REPO: andreagrandi/andreagrandi.github.io.git
      HUGO_OUTPUT_FOLDER: public
    steps:
      - checkout

      - hugo/build:
          html-proofer: true
          source: ${HUGO_OUTPUT_FOLDER}

      - run:
          name: "Install system dependencies"
          command: |
            sudo apt-get update && sudo apt-get install -y rsync

      - deploy:
          name: Deploy static pages to Github Pages
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              echo -e "Starting to deploy to Github Pages\n"
              cd ~/repo
              git config --global user.email "builds@circleci.com"
              git config --global user.name "CircleCI"
              #using token clone gh-pages branch
              git clone --quiet --branch=$CIRCLE_BRANCH https://${GH_TOKEN}@github.com/$TARGET_REPO built_website > /dev/null
              #go into directory and copy data we're interested in to that directory
              cd built_website
              echo "rsync built code with checked out code..."
              rsync -r --exclude=.git --delete ../$HUGO_OUTPUT_FOLDER/ ./
              #add, commit and push files
              echo "add files to git..."
              git add -f .
              echo "commit files to git repository..."
              if git commit -m "CircleCI build $CIRCLE_BUILD_NUM pushed to Github Pages" ; then
                echo "git push files with force..."
                git push -fq origin $BRANCH > /dev/null
                echo -e "Deploy completed\n"
              else
                echo "Content not changed, nothing to deploy"
              fi
            else
              echo "Not master branch, dry run only"
            fi
      - run:
          name: Purge Cloudflare cache
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              curl -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/purge_cache" \
                -H "X-Auth-Email: $CF_AUTH_EMAIL" \
                -H "X-Auth-Key: $CF_AUTH_KEY" \
                -H "Content-Type: application/json" \
                --data '{"purge_everything":true}'
            fi
